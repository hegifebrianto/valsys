DELIMITER $$

USE `valsys_prod`$$

DROP TRIGGER /*!50032 IF EXISTS */ `TRG_PROSPECT_ADDITIONAL_before_update`$$

CREATE
    /*!50017 DEFINER = 'root'@'%' */
    TRIGGER `TRG_PROSPECT_ADDITIONAL_before_update` BEFORE UPDATE ON `PROSPECT_ADDITIONAL` 
    FOR EACH ROW BEGIN
	DECLARE gUSER VARCHAR(50);
	DECLARE vDescStatusHWNew VARCHAR(50);
	DECLARE vDescStatusHWOld VARCHAR(50);
	DECLARE vDescReligionOld VARCHAR(50);
	DECLARE vDescReligionNew VARCHAR(50);
	DECLARE vDescVerificationPeriodOld VARCHAR(50);
	DECLARE vDescVerificationPeriodNew VARCHAR(50);
	DECLARE vDescCustomerClassOld VARCHAR(50);
	DECLARE vDescCustomerClassNew VARCHAR(50);
		
	
	
	IF NEW.`LAST_UPD_BY` = '' THEN	
	   SET gUSER = 'SYSTEM';
	ELSE
	   SET gUSER = NEW.`LAST_UPD_BY`;
	END IF; 
	-- 1
	IF NEW.`STATUS_HW` <> OLD.`STATUS_HW` THEN
	   SELECT DESC_STATUSHW INTO vDescStatusHWNew FROM MASTER_STATUSHW WHERE NEW.`STATUS_HW` = ID;
	   SELECT DESC_STATUSHW INTO vDescStatusHWOld FROM MASTER_STATUSHW WHERE OLD.`STATUS_HW` = ID;
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'STATUS_HW', vDescStatusHWOld, vDescStatusHWNew, gUSER);
	END IF;
	-- 2
	IF NEW.`SGS_NUMBER` <> OLD.`SGS_NUMBER` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'SGS_NUMBER', OLD.`SGS_NUMBER`, NEW.`SGS_NUMBER`, gUSER);
	END IF;
	-- 3
	IF NEW.`SGS_NAME` <> OLD.`SGS_NAME` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'SGS_NAME', OLD.`SGS_NAME`, NEW.`SGS_NAME`, gUSER);
	END IF;
	-- 4
	IF NEW.`GENDER` <> OLD.`GENDER` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'GENDER', OLD.`GENDER`, NEW.`GENDER`, gUSER);
	END IF;
	-- 5
	IF NEW.`RELIGION` <> OLD.`RELIGION` THEN
	   SELECT MASTERRELIGION_NAME INTO vDescReligionNew FROM MASTER_RELIGION WHERE NEW.`RELIGION` = MASTERRELIGION_ID;
	   SELECT MASTERRELIGION_NAME INTO vDescReligionOld FROM MASTER_RELIGION WHERE OLD.`RELIGION` = MASTERRELIGION_ID;
	   
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'RELIGION', vDescReligionOld, vDescReligionNew, gUSER);
	END IF;
	-- 6
	IF NEW.`PLACE_BIRTH` <> OLD.`PLACE_BIRTH` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'PLACE_BIRTH', OLD.`PLACE_BIRTH`, NEW.`PLACE_BIRTH`, gUSER);
	END IF;
	-- 7
	IF NEW.`DATE_OF_BIRTH` <> OLD.`DATE_OF_BIRTH` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'DATE_OF_BIRTH', OLD.`DATE_OF_BIRTH`, NEW.`DATE_OF_BIRTH`, gUSER);
	END IF;
	-- 8
	IF NEW.`PHONE_NBR` <> OLD.`PHONE_NBR` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'PHONE_NBR', OLD.`PHONE_NBR`, NEW.`PHONE_NBR`, gUSER);
	END IF;
	-- 9
	IF NEW.`HANDPHONE_NBR` <> OLD.`HANDPHONE_NBR` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'HANDPHONE_NBR', OLD.`HANDPHONE_NBR`, NEW.`HANDPHONE_NBR`, gUSER);
	END IF;
	-- 10
	IF NEW.`EC_NAME` <> OLD.`EC_NAME` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'EC_NAME', OLD.`EC_NAME`, NEW.`EC_NAME`, gUSER);
	END IF;
	-- 11
	IF NEW.`EC_RELATION` <> OLD.`EC_RELATION` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'EC_RELATION', OLD.`EC_RELATION`, NEW.`EC_RELATION`, gUSER);
	END IF;
	-- 12
	IF NEW.`EC_PHONE` <> OLD.`EC_PHONE` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'EC_PHONE', OLD.`EC_PHONE`, NEW.`EC_PHONE`, gUSER);
	END IF;
	-- 13
	IF NEW.`EC_ADDR` <> OLD.`EC_ADDR` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'EC_ADDR', OLD.`EC_ADDR`, NEW.`EC_ADDR`, gUSER);
	END IF;
	-- 14
	IF NEW.`NIK_SALES` <> OLD.`NIK_SALES` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'NIK_SALES', OLD.`NIK_SALES`, NEW.`NIK_SALES`, gUSER);
	END IF;
	-- 15
	IF NEW.`NAME_SALES` <> OLD.`NAME_SALES` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'NAME_SALES', OLD.`NAME_SALES`, NEW.`NAME_SALES`, gUSER);
	END IF;
	-- 16
	IF NEW.`DIFFERENT_CAUSE` <> OLD.`DIFFERENT_CAUSE` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'DIFFERENT_CAUSE', OLD.`DIFFERENT_CAUSE`, NEW.`DIFFERENT_CAUSE`, gUSER);
	END IF;
	-- 17
	IF NEW.`SALES_CODE` <> OLD.`SALES_CODE` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'SALES_CODE', OLD.`SALES_CODE`, NEW.`SALES_CODE`, gUSER);
	END IF;
	-- 18
	IF NEW.`OFFICE_BRANCH` <> OLD.`OFFICE_BRANCH` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'OFFICE_BRANCH', OLD.`OFFICE_BRANCH`, NEW.`OFFICE_BRANCH`, gUSER);
	END IF;	
	-- 19
	IF NEW.`HEAD_BRANCH` <> OLD.`HEAD_BRANCH` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'HEAD_BRANCH', OLD.`HEAD_BRANCH`, NEW.`HEAD_BRANCH`, gUSER);
	END IF;	
	-- 20
	IF NEW.`ENTITY_CODE` <> OLD.`ENTITY_CODE` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'ENTITY_CODE', OLD.`ENTITY_CODE`, NEW.`ENTITY_CODE`, gUSER);
	END IF;
	-- 21
	IF NEW.`POS` <> OLD.`POS` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'POS', OLD.`POS`, NEW.`POS`, gUSER);
	END IF;		
	
	-- 22
	IF NEW.`STORE_AREA` <> OLD.`STORE_AREA` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'STORE_AREA', OLD.`STORE_AREA`, NEW.`STORE_AREA`, gUSER);
	END IF;
	-- 23
	IF NEW.`ID_NUMBER` <> OLD.`ID_NUMBER` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'ID_NUMBER', OLD.`ID_NUMBER`, NEW.`ID_NUMBER`, gUSER);
	END IF;
	-- 24
	IF NEW.`INSTALLATION_DATE` <> OLD.`INSTALLATION_DATE` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'INSTALLATION_DATE', OLD.`INSTALLATION_DATE`, NEW.`INSTALLATION_DATE`, gUSER);
	END IF;
	-- 25
	IF NEW.`INSTALLATION_TIME` <> OLD.`INSTALLATION_TIME` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'INSTALLATION_TIME', OLD.`INSTALLATION_TIME`, NEW.`INSTALLATION_TIME`, gUSER);
	END IF;
	-- 26
	IF NEW.`KET_TTD` <> OLD.`KET_TTD` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'KET_TTD', OLD.`KET_TTD`, NEW.`KET_TTD`, gUSER);
	END IF;
	-- 27
	IF NEW.`KET_BEDA_ALAMAT` <> OLD.`KET_BEDA_ALAMAT` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'KET_BEDA_ALAMAT', OLD.`KET_BEDA_ALAMAT`, NEW.`KET_BEDA_ALAMAT`, gUSER);
	END IF;
	-- 28
	IF NEW.`KET_IDENTITAS` <> OLD.`KET_IDENTITAS` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'KET_IDENTITAS', OLD.`KET_IDENTITAS`, NEW.`KET_IDENTITAS`, gUSER);
	END IF;
	-- 29
	IF NEW.`KET_PEMILIKRUMAH` <> OLD.`KET_PEMILIKRUMAH` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'KET_PEMILIKRUMAH', OLD.`KET_PEMILIKRUMAH`, NEW.`KET_PEMILIKRUMAH`, gUSER);
	END IF;
	-- 30
	IF NEW.`KET_CC` <> OLD.`KET_CC` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'KET_CC', OLD.`KET_CC`, NEW.`KET_CC`, gUSER);
	END IF;
	-- 31 
	IF NEW.`KET_TAGIHAN` <> OLD.`KET_TAGIHAN` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'KET_TAGIHAN', OLD.`KET_TAGIHAN`, NEW.`KET_TAGIHAN`, gUSER);
	END IF;
	-- 32
	IF NEW.`KET_PICKUPDANA` <> OLD.`KET_PICKUPDANA` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'KET_PICKUPDANA', OLD.`KET_PICKUPDANA`, NEW.`KET_PICKUPDANA`, gUSER);
	END IF;
	-- 33
	IF NEW.`INPUT_PICKUPDANA` <> OLD.`INPUT_PICKUPDANA` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'INPUT_PICKUPDANA', OLD.`INPUT_PICKUPDANA`, NEW.`INPUT_PICKUPDANA`, gUSER);
	END IF;
	-- 34
	IF NEW.`KET_SURATKUASA` <> OLD.`KET_SURATKUASA` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'KET_SURATKUASA', OLD.`KET_SURATKUASA`, NEW.`KET_SURATKUASA`, gUSER);
	END IF;
	-- 35
	
	IF NEW.`KET_INSTANSI` <> OLD.`KET_INSTANSI` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'KET_INSTANSI', OLD.`KET_INSTANSI`, NEW.`KET_INSTANSI`, gUSER);
	END IF;
	-- 36
	
	IF NEW.`KET_PERNYATAANSEWA` <> OLD.`KET_PERNYATAANSEWA` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'KET_PERNYATAANSEWA', OLD.`KET_PERNYATAANSEWA`, NEW.`KET_PERNYATAANSEWA`, gUSER);
	END IF;
	-- 37
	IF NEW.`KET_PERNYATAAN_MULTI_PELANGGAN` <> OLD.`KET_PERNYATAAN_MULTI_PELANGGAN` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'KET_PERNYATAAN_MULTI_PELANGGAN', OLD.`KET_PERNYATAAN_MULTI_PELANGGAN`, NEW.`KET_PERNYATAAN_MULTI_PELANGGAN`, gUSER);
	END IF;
	-- 38
	IF NEW.`KET_PERNYATAAN_BUNDLE_INTERNET` <> OLD.`KET_PERNYATAAN_BUNDLE_INTERNET` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'KET_PERNYATAAN_BUNDLE_INTERNET', OLD.`KET_PERNYATAAN_BUNDLE_INTERNET`, NEW.`KET_PERNYATAAN_BUNDLE_INTERNET`, gUSER);
	END IF;
	-- 39
	IF NEW.`TRANSPORTATION_FEE_FLAG` <> OLD.`TRANSPORTATION_FEE_FLAG` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'TRANSPORTATION_FEE_FLAG', OLD.`TRANSPORTATION_FEE_FLAG`, NEW.`TRANSPORTATION_FEE_FLAG`, gUSER);
	END IF;
	-- 40
	IF NEW.`BT_DK_LK` <> OLD.`BT_DK_LK` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'BT_DK_LK', OLD.`BT_DK_LK`, NEW.`BT_DK_LK`, gUSER);
	END IF;
	-- 41
	IF NEW.`BT_BRANCH_OFFICE` <> OLD.`BT_BRANCH_OFFICE` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'BT_BRANCH_OFFICE', OLD.`BT_BRANCH_OFFICE`, NEW.`BT_BRANCH_OFFICE`, gUSER);
	END IF;
	-- 42
	IF NEW.`BT_REGION_OFFICE` <> OLD.`BT_REGION_OFFICE` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'BT_REGION_OFFICE', OLD.`BT_REGION_OFFICE`, NEW.`BT_REGION_OFFICE`, gUSER);
	END IF;	
	-- 43
	IF NEW.`BT_TRANSPORTATION_FEE` <> OLD.`BT_TRANSPORTATION_FEE` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'BT_TRANSPORTATION_FEE', OLD.`BT_TRANSPORTATION_FEE`, NEW.`BT_TRANSPORTATION_FEE`, gUSER);
	END IF;	
	-- 44
	IF NEW.`CLOSING_DATE` <> OLD.`CLOSING_DATE` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'CLOSING_DATE', OLD.`CLOSING_DATE`, NEW.`CLOSING_DATE`, gUSER);
	END IF;
	-- 45 
	IF NEW.`VERIFICATION_DATE` <> OLD.`VERIFICATION_DATE` THEN
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'VERIFICATION_DATE', OLD.`VERIFICATION_DATE`, NEW.`VERIFICATION_DATE`, gUSER);
	END IF;
	-- 46
	IF NEW.`VERIFICATION_PERIOD` <> OLD.`VERIFICATION_PERIOD` THEN
	   SELECT VERIFICATION_TIME_DESCR INTO vDescVerificationPeriodNew FROM MASTER_VERIFICATION_TIME WHERE NEW.`VERIFICATION_PERIOD` = VERIFICATION_TIME_ID;
	   SELECT VERIFICATION_TIME_DESCR INTO vDescVerificationPeriodOld FROM MASTER_VERIFICATION_TIME WHERE OLD.`VERIFICATION_PERIOD` = VERIFICATION_TIME_ID;	
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'VERIFICATION_PERIOD',vDescVerificationPeriodOld, vDescVerificationPeriodNew, gUSER);
	END IF;
	-- 47
	IF NEW.`CUSTOMER_CLASS` <> OLD.`CUSTOMER_CLASS` THEN
	   SELECT CUSTOMER_CLASSIDS_NAME INTO vDescCustomerClassNew FROM MASTER_CUSTOMER_CLASSIDS WHERE NEW.`CUSTOMER_CLASS` = CUSTOMER_CLASSIDS_ID;
	   SELECT CUSTOMER_CLASSIDS_NAME INTO vDescCustomerClassOld FROM MASTER_CUSTOMER_CLASSIDS WHERE OLD.`CUSTOMER_CLASS` = CUSTOMER_CLASSIDS_ID;	
	   INSERT INTO LOG_PROSPECT_UPDATE 
	   (`PROSPECT_ID`, `TABLE_VALSYS`, `FIELD`, `VALUE_BEFORE`, `VALUE_AFTER`, `UPDATE_BY`)
	   VALUES
	   (OLD.`PROSPECT_ID`, 'PROSPECT_ADDITIONAL', 'CUSTOMER_CLASS',vDescCustomerClassOld,vDescCustomerClassNew, gUSER);
	END IF;	
	
	
	
	
	
    END;
$$

DELIMITER ;